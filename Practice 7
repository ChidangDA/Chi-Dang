--Ex1:
SELECT extract(year from transaction_date) as year, product_id, spend as curr_year_spend, 
lag(spend) over(PARTITION BY product_id order by extract( year from transaction_date)) as prev_year
, round(100*(spend - lag(spend) over(PARTITION BY product_id order by extract( year from transaction_date)))/lag(spend) over(PARTITION BY product_id order by extract( year from transaction_date)),2)
as yoy_rate
FROM user_transactions
--ex2:
With tb1 as(
SELECT card_name, issued_amount, RANK() over(partition by card_name order by issue_year, issue_month ) as rank
FROM monthly_cards_issued
)
select card_name, issued_amount
from tb1
where rank = 1
order by issued_amount desc
--ex3:
With tb1 as (
SELECT *, rank() over (PARTITION BY user_id order by transaction_date) as order_
FROM transactions
)
select user_id, spend, transaction_date
from tb1
where order_ = 3
--ex4:
with tb1 as( 
SELECT transaction_date, user_id , count(product_id) over(partition by user_id, transaction_date) as purchase_count,
rank() over(partition by user_id order by transaction_date desc) as rank
FROM user_transactions
)
select distinct transaction_date, user_id, purchase_count
from tb1
where rank = 1
--ex5:
select tweet_date,user_id, round((AVG(tweet_count) OVER (PARTITION BY user_id ORDER BY tweet_date
ROWS BETWEEN 2 PRECEDING AND CURRENT ROW)),2) as rolling_avg
from tweets
--ex6:
with tb1 as ( 
SELECT *,
transaction_timestamp - lag(transaction_timestamp) over(partition by merchant_id, credit_card_id order by transaction_timestamp)
as diff, (amount - lag(amount) OVER(partition by merchant_id, credit_card_id order by transaction_timestamp)) as amount_diff
FROM transactions
)
select count(*)
from tb1
where extract(minute from diff) <= 10 and extract(hour from diff) = 0
and amount_diff = 0
--ex7:
SELECT category, product, total_spend
FROM (
SELECT category, product, sum(spend) as total_spend, 
RANK()OVER(partition by category order by sum(spend) desc) as ranking
FROM product_spend
where extract(year from transaction_date) = 2022
group by category, product ) as t2
where ranking <= 2
--ex8
With tb1 as(
SELECT artist_name , DENSE_RANK() over(order by count(day) desc) as artist_rank
FROM artists as a join songs as S 
ON a.artist_id = s.artist_id
join global_song_rank as g  
on g.song_id = s.song_id
where rank <= 10
group by artist_name
)
select *
from tb1
where artist_rank <= 5
order by artist_rank
